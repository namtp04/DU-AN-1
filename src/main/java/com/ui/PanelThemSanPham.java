/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.ui;

import com.dao.ChatLieuDAO;
import com.dao.ChiTietSanPhamDAO;
import com.dao.DAOInterface;
import com.dao.LoaiGiayDAO;
import com.dao.MauSacDAO;
import com.dao.SanPhamDAO;
import com.dao.SizeDAO;
import com.entity.ThuocTinh;
import com.dao.ThuongHieuDAO;
import com.dao.XuatXuDAO;
import com.entity.ChatLieu;
import com.entity.ChiTietSanPham;
import com.entity.LoaiGiay;
import com.entity.MauSac;
import com.entity.SanPham;
import com.entity.Size;
import com.entity.ThuongHieu;
import com.entity.XuatXu;
import com.main.Main;
import com.utils.TextUtil;
import com.utils.XImage;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thai
 */
public class PanelThemSanPham extends javax.swing.JPanel {

    /**
     * Creates new form PanelThemSanPham
     */
    LoaiGiayDAO daoLG = new LoaiGiayDAO();
    XuatXuDAO daoXX = new XuatXuDAO();
    ThuongHieuDAO daoTH = new ThuongHieuDAO();
    ChatLieuDAO daoCL = new ChatLieuDAO();
    MauSacDAO daoMS = new MauSacDAO();
    SizeDAO daoS = new SizeDAO();
    SanPhamDAO daoSP = new SanPhamDAO();
    ChiTietSanPhamDAO daoCTSP = new ChiTietSanPhamDAO();

    List<String> listMau = null;
    List<String> listSize = null;

    DefaultTableModel model = null;

    List<SanPham> listSP = null;

    public PanelThemSanPham() {
        initComponents();

        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 3;
            }
        };
        tableChiTietSanPham.setModel(model);
        model.setRowCount(0);
        model.setColumnIdentifiers(new String[]{"Mã chi tiết", "Mã màu", "Mã size", "Số lượng"});

        lblHinhAnh.setSize(250, 300);
        checkAnh();
        showComboBox();
        showCheckBox();

        FlowLayout flow = new FlowLayout(FlowLayout.LEADING, 15, 20);
        panelMau.setLayout(flow);
        panelSize.setLayout(flow);
        panelSize.setSize(260, 175);
        panelMau.setSize(260, 175);

        lblLoiMaSP.setText("");
        lblLoiTenSP.setText("");

        model.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                checkTable();
            }
        });

        try {
            listSP = daoSP.selectAll();
        } catch (SQLException ex) {
            Logger.getLogger(PanelThemSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }

        checkTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHinhAnh = new javax.swing.JLabel();
        btnAnh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbbLoai = new javax.swing.JComboBox<>();
        cbbThuongHieu = new javax.swing.JComboBox<>();
        cbbChatLieu = new javax.swing.JComboBox<>();
        cbbXuatXu = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        panelMau = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableChiTietSanPham = new javax.swing.JTable();
        panelSize = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        lblLoiMaSP = new javax.swing.JLabel();
        lblLoiTenSP = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        lblHinhAnh.setBackground(new java.awt.Color(255, 255, 255));
        lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setText("Hình ảnh");
        lblHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblHinhAnh.setOpaque(true);

        btnAnh.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/file.png"))); // NOI18N
        btnAnh.setText("Chọn ảnh");
        btnAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAnhMouseReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thêm sản phẩm");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Mã sản phẩm");

        txtMaSP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMaSP.setName("Mã sản phẩm"); // NOI18N
        txtMaSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSPKeyReleased(evt);
            }
        });

        txtTenSP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTenSP.setName("Tên sản phẩm"); // NOI18N
        txtTenSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenSPKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Tên sản phẩm");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Loại giày");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Thương hiệu");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Chất liệu");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Xuất xứ");

        cbbLoai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbbThuongHieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbThuongHieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbbChatLieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbChatLieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbbXuatXu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbXuatXu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Giá");

        txtGia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtGia.setName("Giá sản phẩm"); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 204, 0));
        jLabel10.setText("VNĐ");
        jLabel10.setToolTipText("");

        btnThem.setBackground(new java.awt.Color(255, 204, 0));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add2.png"))); // NOI18N
        btnThem.setText("Thêm sản phẩm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        panelMau.setBackground(new java.awt.Color(255, 255, 255));
        panelMau.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Màu");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Size");

        tableChiTietSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã chi tiết", "Màu", "Size", "Số lượng"
            }
        ));
        jScrollPane1.setViewportView(tableChiTietSanPham);

        panelSize.setBackground(new java.awt.Color(255, 255, 255));
        panelSize.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnXoa.setBackground(new java.awt.Color(255, 204, 0));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/xoa3.png"))); // NOI18N
        btnXoa.setText("Xóa dữ liệu");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setEnabled(false);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        lblLoiMaSP.setForeground(new java.awt.Color(255, 0, 0));
        lblLoiMaSP.setText("Trùng mã sản phẩm");

        lblLoiTenSP.setForeground(new java.awt.Color(255, 0, 0));
        lblLoiTenSP.setText("Trùng tên sản phẩm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(btnAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLuu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(panelMau, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbbThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbbXuatXu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbbChatLieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(panelSize, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTenSP)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLoiTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblLoiMaSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAnh, btnLuu, btnThem, btnXoa});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLoiMaSP))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLoiTenSP))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(cbbThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(cbbXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(cbbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelMau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addGap(0, 144, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnhMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnhMouseReleased
        anhEvent();
    }//GEN-LAST:event_btnAnhMouseReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        themSanPham();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        xoa();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        luu();
    }//GEN-LAST:event_btnLuuActionPerformed

    private void txtMaSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSPKeyReleased
        checkMa();
    }//GEN-LAST:event_txtMaSPKeyReleased

    private void txtTenSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenSPKeyReleased
        checkTen();
    }//GEN-LAST:event_txtTenSPKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnh;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbChatLieu;
    private javax.swing.JComboBox<String> cbbLoai;
    private javax.swing.JComboBox<String> cbbThuongHieu;
    private javax.swing.JComboBox<String> cbbXuatXu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblLoiMaSP;
    private javax.swing.JLabel lblLoiTenSP;
    private javax.swing.JPanel panelMau;
    private javax.swing.JPanel panelSize;
    private javax.swing.JTable tableChiTietSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables

    private void chonAnh() {
        JFileChooser chooser = new JFileChooser(this.getClass().getResource("/img").getPath());
        chooser.showOpenDialog(this);
        File file = chooser.getSelectedFile();

        if (file != null) {

            Image img = null;

            try {
                img = ImageIO.read(file);
            } catch (IOException ex) {
                Logger.getLogger(PanelThemSanPham.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (img != null) {
                XImage.saveImage(file);
                lblHinhAnh.setIcon(XImage.resize(XImage.readImage(file.getName()), lblHinhAnh));
                lblHinhAnh.setText("");
                lblHinhAnh.setToolTipText(file.getName());
                lblHinhAnh.setBorder(new LineBorder(Color.GREEN, 3));
            } else {
                JOptionPane.showMessageDialog(this, "Đây không phải là ảnh");
            }
        }
    }

    private boolean checkAnh() {
        if (lblHinhAnh.getIcon() == null) {
            btnAnh.setText("Chọn ảnh");
            btnAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/file.png")));
            lblHinhAnh.setBorder(new LineBorder(Color.RED, 3));
            return false;
        } else {
            btnAnh.setText("Bỏ ảnh");
            btnAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/deletee.png")));
            return true;
        }

    }

    private void anhEvent() {
        if (checkAnh()) {
            lblHinhAnh.setIcon(null);
            lblHinhAnh.setText("Chưa có ảnh");
            lblHinhAnh.setToolTipText(null);
        } else {
            chonAnh();
        }
        checkAnh();
    }

    private void showComboBox() {
        setComboBox(cbbLoai, new LoaiGiay(), daoLG);
        setComboBox(cbbChatLieu, new ChatLieu(), daoCL);
        setComboBox(cbbThuongHieu, new ThuongHieu(), daoTH);
        setComboBox(cbbXuatXu, new XuatXu(), daoXX);
    }

    private <E extends ThuocTinh> void setComboBox(JComboBox cbb, E entity, DAOInterface dao) {
        try {
            cbb.removeAllItems();
            List<E> list = dao.selectAll();
            for (E tt : list) {
                cbb.addItem(tt.getTen());
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelThemSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showCheckBox() {
        setCheckBox(panelMau, new MauSac(), daoMS);
        setCheckBox(panelSize, new Size(), daoS);
    }

    private <E extends ThuocTinh> void setCheckBox(JPanel panel, E entity, DAOInterface dao) {
        try {
            List<E> list = dao.selectAll();
            for (E tt : list) {
                panel.add(new JCheckBox(tt.getTen()));
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelThemSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void themSanPham() {
        model.setRowCount(0);
        if (validateThongTin() && validateThuocTinh()) {
            if (checkMa() && checkTen()) {
                for (int mau = 0; mau < listMau.size(); mau++) {
                    for (int size = 0; size < listSize.size(); size++) {
                        String maCT = txtMaSP.getText() + "_" + daoMS.getMa(listMau.get(mau)) + "_" + daoS.getMa(listSize.get(size));
                        String maMau = daoMS.getMa(listMau.get(mau));
                        String maSize = daoS.getMa(listSize.get(size));
                        model.addRow(new Object[]{maCT, maMau, maSize, 0});
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Kiểm tra lại text field");
            }
        }
        checkTable();
    }

    private boolean validateThongTin() {
        JTextField[] allText = {txtMaSP, txtTenSP, txtGia};
        boolean notErr = true;
        String err = "";
        for (JTextField txt : allText) {
            if (!validateTxt(txt)) {
                err += txt.getName() + ", ";
                notErr = false;
            }
        }
        if (!notErr) {
            JOptionPane.showMessageDialog(this, "Bạn chưa điền: " + err.substring(0, err.length() - 2));
            return false;
        }

        if (TextUtil.isNAN(txtGia.getText())) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số");
            return false;
        }

        int gia = Integer.valueOf(txtGia.getText().trim());
        if (gia <= 1000) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm tối thiểu phải lớn hơn 1000vnđ");
            return false;
        }

        return notErr;
    }

    private boolean validateTxt(JTextField txt) {
        String str = txt.getText().trim();
        if (str.isEmpty()) {
            return false;
        }
        return true;
    }

    private boolean validateThuocTinh() {
        listMau = getCbText(panelMau);
        listSize = getCbText(panelSize);
        if (listMau.size() <= 0 || listSize.size() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn đủ màu sắc và size");
            return false;
        }
        return true;
    }

    private List<String> getCbText(JPanel panel) {
        List<String> list = new ArrayList<>();
        for (Component com : panel.getComponents()) {
            JCheckBox cb = (JCheckBox) com;
            if (cb.isSelected()) {
                list.add(cb.getText());
            }
        }
        return list;
    }

    private boolean checkTable() {
        if (tableChiTietSanPham.getRowCount() > 0) {
            setEditThongTin(false);
            btnXoa.setEnabled(true);
            for (int i = 0; i < tableChiTietSanPham.getRowCount(); i++) {
                String cell = tableChiTietSanPham.getValueAt(i, 3).toString();
                if (TextUtil.isNAN(cell)) {
                    JOptionPane.showMessageDialog(this, "Số lượng phải là số");
                    tableChiTietSanPham.setRowSelectionInterval(i, i);
                    btnLuu.setEnabled(false);
                    return false;
                }
            }
            btnLuu.setEnabled(true);
        } else {
            setEditThongTin(true);
            btnXoa.setEnabled(false);
            btnLuu.setEnabled(false);
            return false;
        }

        return true;

    }

    private void xoa() {
        int[] rows = tableChiTietSanPham.getSelectedRows();
        List<String> listDelete = new ArrayList<>();
        for (int i : rows) {
            listDelete.add(tableChiTietSanPham.getValueAt(i, 0).toString());
        }
        int size = tableChiTietSanPham.getRowCount();
        for (int i = 0; i < size; i++) {
            if (listDelete.contains(tableChiTietSanPham.getValueAt(i, 0))) {
                model.removeRow(i);
                i--;
                size--;
            }
        }
        checkTable();
    }

    private void luu() {
        try {
            if (checkTable()) {
                SanPham sp = new SanPham();
                sp.setMaSP(txtMaSP.getText().trim());
                sp.setTenSP(txtTenSP.getText().trim());
                sp.setHinh(lblHinhAnh.getToolTipText());
                sp.setMaThuongHieu(daoTH.getMa(cbbThuongHieu.getSelectedItem().toString()));
                sp.setMaLoai(daoLG.getMa(cbbLoai.getSelectedItem().toString()));
                sp.setMaChatLieu(daoCL.getMa(cbbChatLieu.getSelectedItem().toString()));
                sp.setMaXuatXu(daoXX.getMa(cbbXuatXu.getSelectedItem().toString()));
                sp.setGia(Integer.valueOf(txtGia.getText()));
                if (daoSP.insert(sp) > 0) {
                    luuChiTietSanPham();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setEditThongTin(boolean edit) {
        txtGia.setEnabled(edit);
        txtTenSP.setEnabled(edit);
        txtMaSP.setEnabled(edit);
        cbbChatLieu.setEnabled(edit);
        cbbLoai.setEnabled(edit);
        cbbThuongHieu.setEnabled(edit);
        cbbXuatXu.setEnabled(edit);
    }

    private boolean checkMa() {
        String maSP = txtMaSP.getText();
        int length = maSP.length();
        if (length > 25 || length < 3) {
            lblLoiMaSP.setText("Số lượng chữ phải 3-25 kí tự");
            return false;
        }
        for (SanPham sp : listSP) {
            if (sp.getMaSP().equalsIgnoreCase(maSP)) {
                lblLoiMaSP.setText("Trùng mã sản phẩm");
                return false;
            }
        }
        lblLoiMaSP.setText("");
        return true;
    }

    private boolean checkTen() {
        String tenSP = txtTenSP.getText().trim();
        int length = tenSP.length();
        if (length > 50 || length < 8) {
            lblLoiTenSP.setText("Số lượng chữ phải 8-50 kí tự");
            return false;
        }
        for (SanPham sp : listSP) {
            if (sp.getTenSP().equalsIgnoreCase(tenSP)) {
                lblLoiTenSP.setText("Trùng tên sản phẩm");
                return false;
            }
        }
        lblLoiTenSP.setText("");
        return true;
    }

    private void luuChiTietSanPham() {
        try {
            int rowCount = tableChiTietSanPham.getRowCount();
            int success = 0;
            for (int i = 0; i < rowCount; i++) {
                ChiTietSanPham ctsp = new ChiTietSanPham();
                ctsp.setMaCTSP(tableChiTietSanPham.getValueAt(i, 0).toString());
                ctsp.setMaSP(txtMaSP.getText());
                ctsp.setMaMau(tableChiTietSanPham.getValueAt(i, 1).toString());
                ctsp.setMaSize(tableChiTietSanPham.getValueAt(i, 2).toString());
                ctsp.setSoLuong(Integer.valueOf(tableChiTietSanPham.getValueAt(i, 3).toString()));
                if (daoCTSP.insert(ctsp) > 0) {
                    success++;
                }
            }
            if (rowCount == success) {
                Main.changeForm(new PanelDanhSachSanPham());
                JOptionPane.showMessageDialog(this, "Lưu thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Lưu thất bại");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi");
        }
    }

}
