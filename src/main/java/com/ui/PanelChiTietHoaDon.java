/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.ui;

import com.dao.ChiTietHoaDonDAO;
import com.dao.KhachHangDAO;
import com.dao.KhuyenMaiDAO;
import com.dao.TaiKhoanDAO;
import com.entity.HoaDon;
import com.entity.KhachHang;
import com.entity.TaiKhoan;
import com.itextpdf.io.font.PdfEncodings;
import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.colors.DeviceGray;
import com.itextpdf.kernel.colors.DeviceRgb;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.borders.Border;
import com.itextpdf.layout.borders.DashedBorder;
import com.itextpdf.layout.borders.SolidBorder;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.TextAlignment;
import com.main.Main;
import com.utils.TextUtil;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Thai
 */
public class PanelChiTietHoaDon extends javax.swing.JPanel {

    /**
     * Creates new form PanelChiTietHoaDon
     */
    public static HoaDon hoaDon = null;
    SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
    DefaultTableModel model;
    ChiTietHoaDonDAO daoCTHD = new ChiTietHoaDonDAO();
    KhuyenMaiDAO daoKM = new KhuyenMaiDAO();
    KhachHangDAO daoKH = new KhachHangDAO();
    TaiKhoanDAO daoTK = new TaiKhoanDAO();
    
    JPanel parent;

    public PanelChiTietHoaDon(JPanel parent) {
        initComponents();
        this.parent = parent;
        model = (DefaultTableModel) tblChiTietHoaDon.getModel();
        model.setColumnIdentifiers(new String[]{"Mã CTSP", "Tên sản phẩm", "Số lượng", "Thành tiền"});
        TableColumnModel column = tblChiTietHoaDon.getColumnModel();
        int[] size = {100, 400, 80, 120};
        for (int i = 0; i < model.getColumnCount(); i++) {
            column.getColumn(i).setPreferredWidth(size[i]);
        }
        showForm();
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelChiTietHoaDon = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChiTietHoaDon = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JLabel();
        txtKhachHang = new javax.swing.JLabel();
        txtThoiGian = new javax.swing.JLabel();
        txtKhuyenMai = new javax.swing.JLabel();
        txtTrangThai = new javax.swing.JLabel();
        txtTongTienCuoi = new javax.swing.JLabel();
        txtTongTienGoc = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        panelChiTietHoaDon.setBackground(new java.awt.Color(204, 204, 255));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Chi tiết hóa đơn");
        jLabel18.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Mã hóa đơn: ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Người bán : ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Thời gian bán: ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Khách hàng: ");

        tblChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblChiTietHoaDon.setRowHeight(30);
        jScrollPane1.setViewportView(tblChiTietHoaDon);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Tổng tiền gốc: ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Tổng tiền cuối: ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Trạng thái: ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Khuyến mãi: ");

        txtMaHD.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtMaHD.setText("null");

        txtTaiKhoan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTaiKhoan.setText("null");

        txtKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtKhachHang.setText("null");

        txtThoiGian.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtThoiGian.setText("null");

        txtKhuyenMai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtKhuyenMai.setText("null");

        txtTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTrangThai.setText("null");

        txtTongTienCuoi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTongTienCuoi.setText("null");

        txtTongTienGoc.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTongTienGoc.setText("null");

        btnThoat.setBackground(new java.awt.Color(0, 255, 0));
        btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/prev.png"))); // NOI18N
        btnThoat.setText("Quay Lại");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 204, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/nh1.png"))); // NOI18N
        jButton1.setText("Xuất hóa đơn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelChiTietHoaDonLayout = new javax.swing.GroupLayout(panelChiTietHoaDon);
        panelChiTietHoaDon.setLayout(panelChiTietHoaDonLayout);
        panelChiTietHoaDonLayout.setHorizontalGroup(
            panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChiTietHoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelChiTietHoaDonLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChiTietHoaDonLayout.createSequentialGroup()
                                .addGap(0, 35, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtTaiKhoan)
                                .addGap(133, 133, 133)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtKhachHang)
                                .addGap(81, 81, 81)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtThoiGian)
                                .addGap(150, 150, 150))))
                    .addGroup(panelChiTietHoaDonLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelChiTietHoaDonLayout.createSequentialGroup()
                        .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelChiTietHoaDonLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaHD))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelChiTietHoaDonLayout.createSequentialGroup()
                                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(211, 211, 211)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(11, 11, 11))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChiTietHoaDonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelChiTietHoaDonLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelChiTietHoaDonLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtKhuyenMai)))
                .addGap(191, 191, 191)
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChiTietHoaDonLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTongTienGoc))
                    .addGroup(panelChiTietHoaDonLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTongTienCuoi)))
                .addGap(158, 158, 158))
        );
        panelChiTietHoaDonLayout.setVerticalGroup(
            panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChiTietHoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaHD))
                .addGap(18, 18, 18)
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTaiKhoan)
                    .addComponent(jLabel3)
                    .addComponent(txtThoiGian)
                    .addComponent(jLabel4)
                    .addComponent(txtKhachHang))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtTongTienGoc))
                    .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtKhuyenMai)))
                .addGap(26, 26, 26)
                .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtTongTienCuoi))
                    .addGroup(panelChiTietHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTrangThai)))
                .addGap(20, 20, 20)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelChiTietHoaDonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, txtKhachHang, txtTaiKhoan});

        panelChiTietHoaDonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, jLabel6, jLabel7, jLabel8, txtKhuyenMai, txtTongTienCuoi, txtTongTienGoc, txtTrangThai});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelChiTietHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelChiTietHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        Main.changeForm(parent);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void xuatHoaDon() {
        if(txtTrangThai.getText().equalsIgnoreCase("Chưa thanh toán")){
            JOptionPane.showMessageDialog(this, "Hóa đơn cần được thanh toán trước khi xuất hóa đơn");
            return;
        }
        try {
            PdfWriter pdfWriter = new PdfWriter(PanelChiTietHoaDon.class.getResource("/hoaDon/").getPath()+txtMaHD.getText() + ".pdf");
            PdfDocument pdfDocument = new PdfDocument(pdfWriter);
            pdfDocument.setDefaultPageSize(PageSize.A4);
            Document dcm = new Document(pdfDocument);

            try {
                PdfFont font = PdfFontFactory.createFont("src\\main\\java\\font\\arial.ttf", PdfEncodings.IDENTITY_H);
                dcm.setFont(font);
            } catch (Exception ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }

            String path = "src\\main\\java\\img\\logo.png";
            try {
                ImageData imgData = ImageDataFactory.create(path);
                Image img = new Image(imgData);
                float x = pdfDocument.getDefaultPageSize().getWidth() / 2;
                float y = pdfDocument.getDefaultPageSize().getHeight() / 2;
                img.setFixedPosition(x - 220, y - 110);
                img.setOpacity(0.2f);
                dcm.add(img);
            } catch (MalformedURLException ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }

            float twoCol = 285f;
            float threeCol = 190f;
            float twoCol150 = twoCol + 150f;
            float twoColWidth[] = {twoCol150, twoCol};
            float threeColWidth[] = {threeCol, threeCol, threeCol};
            float fullWidth[] = {threeCol * 3};
            Paragraph onesp = new Paragraph("\n");

            Table table = new Table(twoColWidth);

            Table table1 = new Table(new float[]{twoCol / 2, twoCol / 2});           
            table.addCell(new Cell().add(new Paragraph("Invoice")).setFontSize(25f).setBorder(Border.NO_BORDER).setBold());
            table1.addCell(getHeaderTextCell("Mã HD: "));
            table1.addCell(getHeaderTextCellValue(txtMaHD.getText()));
            table1.addCell(getHeaderTextCell("Ngày tạo: "));
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            table1.addCell(getHeaderTextCellValue(sdf.format(new Date())));
            Border bd = new SolidBorder(new DeviceGray(0.7f), 2f);

            Table tb = new Table(fullWidth);
            tb.setBorder(bd);
            table.addCell(new Cell().add(table1).setBorder(Border.NO_BORDER));

            Table twoColTable = new Table(twoColWidth);
            twoColTable.addCell(getBillingAndShippingCell("Thông tin hóa đơn"));
            twoColTable.addCell(getBillingAndShippingCell("Thông tin khách hàng"));
            dcm.add(table);
            dcm.add(onesp);
            dcm.add(tb);
            dcm.add(onesp);
            dcm.add(twoColTable.setMarginBottom(12f));

            Table twoColTable1 = new Table(twoColWidth);
            twoColTable1.addCell(getCell10Left("Cửa hàng", true));
            twoColTable1.addCell(getCell10Left("Họ tên KH", true));
            twoColTable1.addCell(getCell10Left("Bán giày đá bóng RoCon", false));

            try {
                KhachHang kh = daoKH.selectByID(txtKhachHang.getText());
                if (kh == null) {
                    twoColTable1.addCell(getCell10Left("...................................................", false));
                } else {
                    twoColTable1.addCell(getCell10Left(kh.getTenKH(), false));
                }

            } catch (SQLException ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }
            dcm.add(twoColTable1);
            
            Table twoColTable2 = new Table(twoColWidth);
            twoColTable2.addCell(getCell10Left("Nhân viên", true));
            twoColTable2.addCell(getCell10Left("Địa chỉ", true));
            try {
                TaiKhoan tk = daoTK.selectByID(txtTaiKhoan.getText().trim());
                twoColTable2.addCell(getCell10Left(tk.getTen(), false));
            } catch (SQLException ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                KhachHang kh = daoKH.selectByID(txtKhachHang.getText());
                if (kh == null) {
                    twoColTable2.addCell(getCell10Left("...................................................", false));
                } else {
                    twoColTable2.addCell(getCell10Left(kh.getDiaChi(), false));
                }
            } catch (SQLException ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }
            dcm.add(twoColTable2);
            float oneColumnWidth[] = {twoCol150};

            Table oneColumnTable = new Table(oneColumnWidth);
            oneColumnTable.addCell(getCell10Left("Số DT", true));
            try {
                TaiKhoan tk = daoTK.selectByID(txtTaiKhoan.getText().trim());
                oneColumnTable.addCell(getCell10Left(tk.getSdt(), false));
            } catch (SQLException ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }
            oneColumnTable.addCell(getCell10Left("Email", true));
            try {
                TaiKhoan tk = daoTK.selectByID(txtTaiKhoan.getText().trim());
                oneColumnTable.addCell(getCell10Left(tk.getEmail(), false));
            } catch (SQLException ex) {
                Logger.getLogger(PanelBanHang.class.getName()).log(Level.SEVERE, null, ex);
            }
            dcm.add(oneColumnTable.setMarginTop(10f));
            dcm.add(onesp);

            Table gachCham = new Table(fullWidth);
            Border bd1 = new DashedBorder(new DeviceGray(0.7f), 0.5f);
            dcm.add(gachCham.setBorder(bd1));
            dcm.add(onesp);
            dcm.add(new Paragraph("Sản phẩm").setBold().setFontSize(15f));
            dcm.add(onesp);
            Table threeColTable = new Table(threeColWidth);
            threeColTable.setBackgroundColor(new DeviceRgb(0, 0, 0), 0.7f);
            threeColTable.addCell(new Cell().add(new Paragraph("Tên SP")).setBold().setFontColor(new DeviceRgb(1.0f, 1.0f, 1.0f)).setBorder(Border.NO_BORDER));
            threeColTable.addCell(new Cell().add(new Paragraph("Số lượng")).setBold().setFontColor(new DeviceRgb(1.0f, 1.0f, 1.0f)).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.CENTER));
            threeColTable.addCell(new Cell().add(new Paragraph("Giá (VND)")).setBold().setFontColor(new DeviceRgb(1.0f, 1.0f, 1.0f)).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.RIGHT).setMarginRight(15f));
            dcm.add(threeColTable);
            dcm.add(onesp);

            Table threeColTable1 = new Table(threeColWidth);
            int row = tblChiTietHoaDon.getRowCount();
            for (int i = 0; i < row; i++) {
                System.out.println("add đon hàng thành công");
                String tenSP = String.valueOf(tblChiTietHoaDon.getValueAt(i, 1));
                String soLuongSP = String.valueOf(tblChiTietHoaDon.getValueAt(i, 2));
                String gia = String.valueOf(tblChiTietHoaDon.getValueAt(i, 3));
                threeColTable1.addCell(new Cell().add(new Paragraph(tenSP)).setMarginLeft(10f).setBorder(Border.NO_BORDER));
                threeColTable1.addCell(new Cell().add(new Paragraph(soLuongSP)).setTextAlignment(TextAlignment.CENTER).setBorder(Border.NO_BORDER));
                threeColTable1.addCell(new Cell().add(new Paragraph(gia)).setMarginRight(15f).setTextAlignment(TextAlignment.RIGHT).setBorder(Border.NO_BORDER));
            }
            dcm.add(threeColTable1.setMarginBottom(20f));
            float onetwo[] = {threeCol + 125f, threeCol * 2};

            Table gachCham1 = new Table(onetwo);
            gachCham1.addCell(new Cell().add(new Paragraph("")).setBorder(Border.NO_BORDER));
            gachCham1.addCell(new Cell().add(gachCham).setBorder(Border.NO_BORDER));
            dcm.add(gachCham1);
            dcm.add(onesp);

            Table tongTienGoc = new Table(threeColWidth);
            tongTienGoc.addCell(new Cell().add(new Paragraph("")).setBorder(Border.NO_BORDER));
            tongTienGoc.addCell(new Cell().add(new Paragraph("Tổng tiền gốc")).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.CENTER));
            tongTienGoc.addCell(new Cell().add(new Paragraph(txtTongTienGoc.getText())).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.RIGHT));
            dcm.add(tongTienGoc);
                        
            Double hehe = Double.parseDouble(txtTongTienGoc.getText().replaceAll("\\.", ""));
            Double hehe1 = Double.parseDouble(txtTongTienCuoi.getText().replaceAll("\\.", ""));
            
            Table giamGiaTable = new Table(threeColWidth);
            giamGiaTable.addCell(new Cell().add(new Paragraph("")).setBorder(Border.NO_BORDER));
            giamGiaTable.addCell(new Cell().add(new Paragraph("Giảm giá")).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.CENTER));
            giamGiaTable.addCell(new Cell().add(new Paragraph(TextUtil.round(hehe-hehe1))).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.RIGHT));
            dcm.add(giamGiaTable);
            
            Table gachCham2 = new Table(onetwo);
            gachCham2.addCell(new Cell().add(new Paragraph("")).setBorder(Border.NO_BORDER));
            gachCham2.addCell(new Cell().add(gachCham).setBorder(Border.NO_BORDER));
            dcm.add(gachCham2);
            dcm.add(onesp);
            
            Table tongTienThanhToanTable = new Table(threeColWidth);
            tongTienThanhToanTable.addCell(new Cell().add(new Paragraph("")).setBorder(Border.NO_BORDER));
            tongTienThanhToanTable.addCell(new Cell().add(new Paragraph("Tổng tiền thanh toán")).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.CENTER));
            tongTienThanhToanTable.addCell(new Cell().add(new Paragraph(txtTongTienCuoi.getText())).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.RIGHT));
            dcm.add(tongTienThanhToanTable);
            dcm.add(onesp);
            
            Table gachCham3 = new Table(fullWidth);
            dcm.add(gachCham3.setBorder(bd1));
            dcm.add(onesp);
            Border bd2 = new SolidBorder(new DeviceRgb(0, 0, 0), 2f);
            Table tb1 = new Table(fullWidth);
            tb1.setBorder(bd2);
            dcm.add(tb1);

            dcm.close();
            JOptionPane.showMessageDialog(this, "Xuất hóa đơn thành công");
        } catch (FileNotFoundException ex) {
            return;
        }
    }

    private static Cell getHeaderTextCell(String textValue) {
        return new Cell().add(new Paragraph(textValue)).setBold().setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.RIGHT);
    }

    private static Cell getHeaderTextCellValue(String textValue) {
        return new Cell().add(new Paragraph(textValue)).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.LEFT);
    }

    private static Cell getBillingAndShippingCell(String textValue) {
        return new Cell().add(new Paragraph(textValue)).setFontSize(12f).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.LEFT).setBold();
    }

    private static Cell getCell10Left(String textValue, Boolean isBold) {
        Cell myCell = new Cell().add(new Paragraph(textValue)).setFontSize(10f).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.LEFT);
        return isBold ? myCell.setBold() : myCell;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        xuatHoaDon();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelChiTietHoaDon;
    private javax.swing.JTable tblChiTietHoaDon;
    private javax.swing.JLabel txtKhachHang;
    private javax.swing.JLabel txtKhuyenMai;
    private javax.swing.JLabel txtMaHD;
    private javax.swing.JLabel txtTaiKhoan;
    private javax.swing.JLabel txtThoiGian;
    private javax.swing.JLabel txtTongTienCuoi;
    private javax.swing.JLabel txtTongTienGoc;
    private javax.swing.JLabel txtTrangThai;
    // End of variables declaration//GEN-END:variables

    private void showForm() {
        txtMaHD.setText(hoaDon.getMaHD());
        txtKhachHang.setText(hoaDon.getMaKH());
        txtKhuyenMai.setText(daoKM.getDetailKhuyenMai(hoaDon.getMaKM()));
        txtTaiKhoan.setText(hoaDon.getTaiKhoan());
        txtThoiGian.setText(formater.format(hoaDon.getThoiGianBan()));
        txtTongTienCuoi.setText(TextUtil.round(hoaDon.getTongTienCuoi()));
        txtTongTienGoc.setText(TextUtil.round(hoaDon.getTongTienGoc()));
        txtTrangThai.setText(hoaDon.getTrangThai());
        if (hoaDon.isTrangThai()) {
            txtTrangThai.setForeground(new Color(0,204,51));
        } else {
            txtTrangThai.setForeground(Color.RED);
        }
    }

    private void showTable() {
        model.setRowCount(0);
        for (Object[] cthd : daoCTHD.getAllHoaDonChiTiet(hoaDon.getMaHD())) {
            model.addRow(new Object[]{cthd[0], cthd[1], cthd[2], TextUtil.round(cthd[3])});
        }
    }
}
